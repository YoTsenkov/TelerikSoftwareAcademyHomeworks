 static int[,] CoorArr()
    {
        int[,] coords = new int[2, 22];
        int startX = CARD_OFFSET;
        int startY = CARD_OFFSET;
        for (int col = 0; col < coords.GetLength(1); col++)
        {
            coords[0, col] = startX;
            startX += CARD_WIDTH + CARD_OFFSET;
            if (col == coords.GetLength(0) / 2)
            {
                startX = 0;
            }            	            
        }
        for (int row = 0; row < coords.GetLength(0); row++)
        {
            coords[row, 0] = startY;
            if (row == coords.GetLength(0) / 2)
            {
                startY = CONSOLE_HEIGHT - CARD_OFFSET - CARD_HEIGHT;
            }
        }
        return coords;
    }







static int[,] CoorArr()
    {
        int[,] coords = new int[2, 22];
        int startX = CARD_OFFSET;
        int startY = CARD_OFFSET;
        for (int col = 0; col < coords.GetLength(1); col++)
        {
            coords[0, col] = startX;
            startX += CARD_WIDTH + CARD_OFFSET;
            if (col == (coords.GetLength(1) - 1) / 2)
            {
                startX = CARD_OFFSET;
            }            	            
        }
        for (int col = 0; col < coords.GetLength(1); col++)
        {
            coords[1, col] = startY;
            if (col == (coords.GetLength(1) - 1) / 2)
            {
                startY = CONSOLE_HEIGHT - CARD_OFFSET - CARD_HEIGHT;
            }
        }
        return coords;
    }











        //{create Dealer & create Player}
        Dealer d = new Dealer();
        Console.WriteLine("Enter your nickname.");
        string name = Console.ReadLine();
        Player p = new Player(name);        
        Console.WriteLine("Do you want to read the rules before the start of the game? YES or NO");
        string read = Console.ReadLine().ToLower();
        string[] rules;
        if (read == "yes")
        {
            rules = File.ReadAllLines("file path");
            foreach (var item in rules)
            {
                Console.WriteLine(item);
            }
        }